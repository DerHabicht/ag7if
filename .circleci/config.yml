defaults: &defaults
  working_directory: /home/circleci/ag7if
jobs:
  build:
    <<: *defaults
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker image
          command: |
            if [[ "$CIRCLE_BRANCH" == "master" ]]
            then
              docker build -t weblair/ag7if:production -t "weblair/ag7if:$BASE_VERSION+$CIRCLE_BUILD_NUM" .
            elif [[ "$CIRCLE_BRANCH" == "develop" ]]
            then
              docker build -t weblair/ag7if:latest -t "weblair/ag7if:$BASE_VERSION+$CIRCLE_BUILD_NUM" .
            else
              docker build -t weblair/ag7if:test -t "weblair/ag7if:$BASE_VERSION+$CIRCLE_BUILD_NUM" .
            fi
      - run:
          name: Push Docker image
          command: |
              echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
              docker push weblair/ag7if
  stage:
    <<: *defaults
    docker:
      - image: weblair/lair:latest
    steps:
      - run:
          name: Pull Docker image
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -C \
            "docker stop ag7if-stage; docker rm ag7if-stage; docker pull weblair/ag7if:latest"
      - run:
          name: Restart the Docker image
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -C \
            "docker run -dit --name ag7if-stage \
              -e GIN_MODE=release \
              -e DB_HOST=$DB_HOST \
              -e DB_NAME=$DB_STAGE_NAME \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e AUTH0_API_AUDIENCE=$AUTH0_API_AUDIENCE \
              -e AUTH0_JWK=$AUTH0_JWK \
              --network $DB_NETWORK \
              -p 9001:8080 \
              weblair/ag7if:latest"
  deploy:
    <<: *defaults
    docker:
      - image: weblair/lair:latest
    steps:
      - run:
          name: Build Docker image
          command: docker build -t weblair/ag7if:production .
      - run:
          name: Push Docker image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker push weblair/ag7if:production
      - run:
          name: Pull Docker image
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -C \
            "docker stop ag7if-production; docker rm ag7if-production; docker pull weblair/ag7if:production"
      - run:
          name: Restart the Docker image
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -C \
            "docker run -dit --name ag7if-production \
              -e GIN_MODE=release \
              -e DB_HOST=$DB_HOST \
              -e DB_NAME=$DB_PRODUCTION_NAME \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e AUTH0_API_AUDIENCE=$AUTH0_API_AUDIENCE \
              -e AUTH0_JWK=$AUTH0_JWK \
              --network $DB_NETWORK \
              -p 9000:8080 \
              weblair/ag7if:production"
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - stage:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
